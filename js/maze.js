/*    

  0 - Nothing
  1 - Horizontal line
  2 - Vertical line
  3 - Food
  4 - Pill
  5 - Teleport
  6 - Top left corner
  9 - Top right corner
  7 - Bottom left corner
  8 - Bottom right corner
  99 - Ghost lair entrance to prevent pacman from entering the ghost lair


*/

let mazeMap = [
  [6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 9, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 9],
  [2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 2, 2, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2],
  [2, 3, 6, 1, 1, 9, 3, 6, 1, 1, 1, 9, 3, 2, 2, 3, 6, 1, 1, 1, 9, 3, 6, 1, 1, 9, 3, 2],
  [2, 3, 2, 0, 0, 2, 3, 2, 0, 0, 0, 2, 3, 2, 2, 3, 2, 0, 0, 0, 2, 3, 2, 0, 0, 2, 3, 2],
  [2, 3, 7, 1, 1, 8, 3, 7, 1, 1, 1, 8, 3, 7, 8, 3, 7, 1, 1, 1, 8, 3, 7, 1, 1, 8, 3, 2],
  [2, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 2],
  [2, 3, 6, 1, 1, 9, 3, 6, 9, 3, 6, 1, 1, 1, 1, 1, 1, 9, 3, 6, 9, 3, 6, 1, 1, 9, 3, 2],
  [2, 3, 7, 1, 1, 8, 3, 2, 2, 3, 7, 1, 1, 9, 6, 1, 1, 8, 3, 2, 2, 3, 7, 1, 1, 8, 3, 2],
  [2, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 2],
  [7, 1, 1, 1, 1, 9, 3, 2, 7, 1, 1, 9, 3, 2, 2, 3, 6, 1, 1, 8, 2, 3, 6, 1, 1, 1, 1, 8],
  [0, 0, 0, 0, 0, 2, 3, 2, 6, 1, 1, 8, 3, 7, 8, 3, 7, 1, 1, 9, 2, 3, 2, 0, 0, 0, 0, 0],
  [0, 0, 0, 0, 0, 2, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 2, 0, 0, 0, 0, 0],
  [0, 0, 0, 0, 0, 2, 3, 2, 2, 3, 6, 1, 1,99,99, 1, 1, 9, 3, 2, 2, 3, 2, 0, 0, 0, 0, 0],
  [0, 1, 1, 1, 1, 8, 3, 7, 8, 3, 2, 0, 0, 0, 0, 0, 0, 2, 3, 7, 8, 3, 7, 1, 1, 1, 1, 0],
  [5, 3, 3, 3, 3, 3, 4, 3, 3, 3, 2, 0, 0, 0, 0, 0, 0, 2, 3, 3, 3, 4, 3, 3, 3, 3, 3, 5],
  [0, 1, 1, 1, 1, 9, 3, 6, 9, 3, 2, 0, 0, 0, 0, 0, 0, 2, 3, 6, 9, 3, 6, 1, 1, 1, 1, 0],
  [0, 0, 0, 0, 0, 2, 3, 2, 2, 3, 7, 1, 1, 1, 1, 1, 1, 8, 3, 2, 2, 3, 2, 0, 0, 0, 0, 0],
  [0, 0, 0, 0, 0, 2, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 2, 0, 0, 0, 0, 0],
  [0, 0, 0, 0, 0, 2, 3, 2, 2, 3, 6, 1, 1, 1, 1, 1, 1, 9, 3, 2, 2, 3, 2, 0, 0, 0, 0, 0],
  [6, 1, 1, 1, 1, 8, 3, 7, 8, 3, 7, 1, 1, 9, 6, 1, 1, 8, 3, 7, 8, 3, 7, 1, 1, 1, 1, 9],
  [2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2],
  [2, 3, 6, 1, 1, 9, 3, 6, 1, 1, 1, 9, 3, 2, 2, 3, 6, 1, 1, 1, 9, 3, 6, 1, 1, 9, 3, 2],
  [2, 3, 7, 1, 9, 2, 3, 7, 1, 1, 1, 8, 3, 7, 8, 3, 7, 1, 1, 1, 8, 3, 2, 6, 1, 8, 3, 2],
  [2, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 2],
  [7, 1, 9, 3, 2, 2, 3, 6, 9, 3, 6, 1, 1, 1, 1, 1, 1, 9, 3, 6, 9, 3, 2, 2, 3, 6, 1, 8],
  [6, 1, 8, 3, 7, 8, 3, 2, 2, 3, 7, 1, 1, 9, 6, 1, 1, 8, 3, 2, 2, 3, 7, 8, 3, 7, 1, 9],
  [2, 3, 3, 3, 3, 3, 3, 2, 2, 4, 3, 3, 3, 2, 2, 3, 3, 3, 4, 2, 2, 3, 3, 3, 3, 3, 3, 2],
  [2, 3, 6, 1, 1, 1, 1, 8, 7, 1, 1, 9, 3, 2, 2, 3, 6, 1, 1, 8, 7, 1, 1, 1, 1, 9, 3, 2],
  [2, 3, 7, 1, 1, 1, 1, 1, 1, 1, 1, 8, 3, 7, 8, 3, 7, 1, 1, 1, 1, 1, 1, 1, 1, 8, 3, 2],
  [2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2],
  [7, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8],
];
  
const LEVEL_1_MAP = [
  [6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 9, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 9],
  [2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 2, 2, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2],
  [2, 3, 6, 1, 1, 9, 3, 6, 1, 1, 1, 9, 3, 2, 2, 3, 6, 1, 1, 1, 9, 3, 6, 1, 1, 9, 3, 2],
  [2, 3, 2, 0, 0, 2, 3, 2, 0, 0, 0, 2, 3, 2, 2, 3, 2, 0, 0, 0, 2, 3, 2, 0, 0, 2, 3, 2],
  [2, 3, 7, 1, 1, 8, 3, 7, 1, 1, 1, 8, 3, 7, 8, 3, 7, 1, 1, 1, 8, 3, 7, 1, 1, 8, 3, 2],
  [2, 4, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 4, 2],
  [2, 3, 6, 1, 1, 9, 3, 6, 9, 3, 6, 1, 1, 1, 1, 1, 1, 9, 3, 6, 9, 3, 6, 1, 1, 9, 3, 2],
  [2, 3, 7, 1, 1, 8, 3, 2, 2, 3, 7, 1, 1, 9, 6, 1, 1, 8, 3, 2, 2, 3, 7, 1, 1, 8, 3, 2],
  [2, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 2],
  [7, 1, 1, 1, 1, 9, 3, 2, 7, 1, 1, 9, 3, 2, 2, 3, 6, 1, 1, 8, 2, 3, 6, 1, 1, 1, 1, 8],
  [0, 0, 0, 0, 0, 2, 3, 2, 6, 1, 1, 8, 3, 7, 8, 3, 7, 1, 1, 9, 2, 3, 2, 0, 0, 0, 0, 0],
  [0, 0, 0, 0, 0, 2, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 2, 0, 0, 0, 0, 0],
  [0, 0, 0, 0, 0, 2, 3, 2, 2, 3, 6, 1, 1,99,99, 1, 1, 9, 3, 2, 2, 3, 2, 0, 0, 0, 0, 0],
  [0, 1, 1, 1, 1, 8, 3, 7, 8, 3, 2, 0, 0, 0, 0, 0, 0, 2, 3, 7, 8, 3, 7, 1, 1, 1, 1, 0],
  [5, 3, 3, 3, 3, 3, 4, 3, 3, 3, 2, 0, 0, 0, 0, 0, 0, 2, 3, 3, 3, 4, 3, 3, 3, 3, 3, 5],
  [0, 1, 1, 1, 1, 9, 3, 6, 9, 3, 2, 0, 0, 0, 0, 0, 0, 2, 3, 6, 9, 3, 6, 1, 1, 1, 1, 0],
  [0, 0, 0, 0, 0, 2, 3, 2, 2, 3, 7, 1, 1, 1, 1, 1, 1, 8, 3, 2, 2, 3, 2, 0, 0, 0, 0, 0],
  [0, 0, 0, 0, 0, 2, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 2, 0, 0, 0, 0, 0],
  [0, 0, 0, 0, 0, 2, 3, 2, 2, 3, 6, 1, 1, 1, 1, 1, 1, 9, 3, 2, 2, 3, 2, 0, 0, 0, 0, 0],
  [6, 1, 1, 1, 1, 8, 3, 7, 8, 3, 7, 1, 1, 9, 6, 1, 1, 8, 3, 7, 8, 3, 7, 1, 1, 1, 1, 9],
  [2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2],
  [2, 3, 6, 1, 1, 9, 3, 6, 1, 1, 1, 9, 3, 2, 2, 3, 6, 1, 1, 1, 9, 3, 6, 1, 1, 9, 3, 2],
  [2, 3, 7, 1, 9, 2, 3, 7, 1, 1, 1, 8, 3, 7, 8, 3, 7, 1, 1, 1, 8, 3, 2, 6, 1, 8, 3, 2],
  [2, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 2],
  [7, 1, 9, 3, 2, 2, 3, 6, 9, 3, 6, 1, 1, 1, 1, 1, 1, 9, 3, 6, 9, 3, 2, 2, 3, 6, 1, 8],
  [6, 1, 8, 3, 7, 8, 3, 2, 2, 3, 7, 1, 1, 9, 6, 1, 1, 8, 3, 2, 2, 3, 7, 8, 3, 7, 1, 9],
  [2, 3, 3, 3, 3, 3, 3, 2, 2, 4, 3, 3, 3, 2, 2, 3, 3, 3, 4, 2, 2, 3, 3, 3, 3, 3, 3, 2],
  [2, 3, 6, 1, 1, 1, 1, 8, 7, 1, 1, 9, 3, 2, 2, 3, 6, 1, 1, 8, 7, 1, 1, 1, 1, 9, 3, 2],
  [2, 3, 7, 1, 1, 1, 1, 1, 1, 1, 1, 8, 3, 7, 8, 3, 7, 1, 1, 1, 1, 1, 1, 1, 1, 8, 3, 2],
  [2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2],
  [7, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8],
];
  
const LEVEL_2_MAP = [
  [6, 1, 1, 1, 1, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 1, 1, 1, 1, 9],
  [2, 3, 3, 3, 3, 2, 0, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 9, 0, 2, 3, 3, 3, 3, 2],
  [2, 3, 6, 9, 3, 2, 0, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 0, 2, 3, 6, 9, 3, 2],
  [2, 3, 2, 2, 3, 2, 0, 2, 3, 6, 1, 1, 1, 1, 1, 1, 1, 1, 9, 3, 2, 0, 2, 3, 2, 2, 3, 2],
  [2, 3, 2, 2, 3, 7, 1, 8, 3, 7, 1, 1, 1, 9, 6, 1, 1, 1, 8, 3, 7, 1, 8, 3, 2, 2, 3, 2],
  [2, 3, 2, 2, 3, 3, 3, 3, 4, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 4, 3, 3, 3, 3, 2, 2, 3, 2],
  [2, 3, 2, 7, 1, 9, 3, 6, 1, 1, 1, 9, 3, 2, 2, 3, 6, 1, 1, 1, 9, 3, 6, 1, 8, 2, 3, 2],
  [8, 3, 7, 1, 1, 8, 3, 7, 1, 1, 1, 8, 3, 7, 8, 3, 7, 1, 1, 1, 8, 3, 7, 1, 1, 8, 3, 7],
  [5, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 5],
  [1, 1, 9, 3, 6, 9, 3, 6, 9, 3, 6, 1, 1, 1, 1, 1, 1, 9, 3, 6, 9, 3, 6, 9, 3, 6, 1, 1],
  [0, 0, 2, 3, 2, 2, 3, 2, 2, 3, 7, 1, 1, 1, 1, 1, 1, 8, 3, 2, 2, 3, 2, 2, 3, 2, 0, 0],
  [0, 0, 2, 3, 2, 2, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 2, 2, 3, 2, 0, 0],
  [0, 0, 2, 3, 2, 2, 3, 2, 2, 3, 6, 1, 1,99,99, 1, 1, 9, 3, 2, 2, 3, 2, 2, 3, 2, 0, 0],
  [1, 1, 8, 3, 7, 8, 3, 7, 8, 3, 2, 0, 0, 0, 0, 0, 0, 2, 3, 7, 8, 3, 7, 8, 3, 7, 1, 1],
  [5, 3, 3, 3, 3, 3, 4, 3, 3, 3, 2, 0, 0, 0, 0, 0, 0, 2, 3, 3, 3, 4, 3, 3, 3, 3, 3, 5],
  [1, 1, 9, 3, 6, 9, 3, 6, 9, 3, 2, 0, 0, 0, 0, 0, 0, 2, 3, 6, 9, 3, 6, 9, 3, 6, 1, 1],
  [0, 0, 2, 3, 7, 8, 3, 2, 2, 3, 7, 1, 1, 1, 1, 1, 1, 8, 3, 2, 2, 3, 7, 8, 3, 2, 0, 0],
  [0, 0, 2, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 2, 0, 0],
  [0, 0, 7, 1, 1, 9, 3, 2, 2, 3, 6, 1, 1, 1, 1, 1, 1, 9, 3, 2, 2, 3, 6, 1, 1, 8, 0, 0],
  [6, 1, 1, 1, 1, 8, 3, 7, 8, 3, 7, 1, 1, 1, 1, 1, 1, 8, 3, 7, 8, 3, 7, 1, 1, 1, 1, 9],
  [2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2],
  [2, 3, 6, 1, 1, 1, 1, 1, 9, 3, 6, 1, 1, 1, 1, 1, 1, 9, 3, 6, 1, 1, 1, 1, 1, 9, 3, 2],
  [2, 3, 2, 6, 1, 1, 1, 1, 8, 3, 7, 1, 1, 1, 1, 1, 1, 8, 3, 7, 1, 1, 1, 1, 9, 2, 3, 2],
  [2, 3, 2, 2, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 2, 2, 3, 2],
  [2, 3, 2, 2, 3, 6, 9, 3, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 9, 3, 6, 9, 3, 2, 2, 3, 2],
  [8, 3, 7, 8, 3, 2, 2, 3, 7, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8, 3, 2, 2, 3, 7, 8, 3, 7],
  [5, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 5],
  [9, 3, 6, 1, 1, 8, 7, 1, 1, 1, 1, 9, 3, 6, 9, 3, 6, 1, 1, 1, 1, 8, 7, 1, 1, 9, 3, 6],
  [2, 3, 7, 1, 1, 1, 1, 1, 1, 1, 1, 8, 3, 2, 2, 3, 7, 1, 1, 1, 1, 1, 1, 1, 1, 8, 3, 2],
  [2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2],
  [7, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8, 7, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8],
];
  
const LEVEL_3_MAP = [
  [6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 9],
  [2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2],
  [2, 3, 6, 9, 3, 6, 1, 1, 9, 3, 6, 1, 1, 1, 1, 1, 1, 9, 3, 6, 1, 1, 9, 3, 6, 9, 3, 2],
  [2, 3, 2, 2, 3, 2, 0, 0, 2, 3, 2, 6, 1, 1, 1, 1, 9, 2, 3, 2, 0, 0, 2, 3, 2, 2, 3, 2],
  [2, 3, 2, 2, 3, 7, 1, 1, 8, 3, 2, 2, 3, 3, 3, 3, 2, 2, 3, 7, 1, 1, 8, 3, 2, 2, 3, 2],
  [2, 3, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 3, 6, 9, 3, 2, 2, 3, 3, 3, 3, 3, 3, 2, 2, 3, 2],
  [2, 3, 2, 7, 1, 9, 3, 6, 9, 3, 2, 2, 3, 2, 2, 3, 2, 2, 3, 6, 9, 3, 6, 1, 8, 2, 3, 2],
  [2, 3, 7, 1, 1, 8, 3, 2, 2, 3, 7, 8, 3, 2, 2, 3, 7, 8, 3, 2, 2, 3, 7, 1, 1, 8, 3, 2],
  [2, 3, 3, 3, 3, 3, 3, 2, 2, 4, 3, 3, 3, 2, 2, 3, 3, 3, 4, 2, 2, 3, 3, 3, 3, 3, 3, 2],
  [7, 1, 9, 3, 6, 1, 1, 8, 7, 1, 1, 9, 3, 2, 2, 3, 6, 1, 1, 8, 7, 1, 1, 9, 3, 6, 1, 8],
  [0, 0, 2, 3, 7, 1, 1, 9, 6, 1, 1, 8, 3, 7, 8, 3, 7, 1, 1, 9, 6, 1, 1, 8, 3, 2, 0, 0],
  [0, 0, 2, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 2, 0, 0],
  [0, 1, 8, 3, 6, 9, 3, 2, 2, 3, 6, 1, 1,99,99, 1, 1, 9, 3, 2, 2, 3, 6, 9, 3, 7, 1, 0],
  [5, 3, 3, 3, 2, 2, 3, 7, 8, 3, 2, 0, 0, 0, 0, 0, 0, 2, 3, 7, 8, 3, 2, 2, 3, 3, 3, 5],
  [0, 1, 1, 1, 8, 2, 3, 3, 3, 3, 2, 0, 0, 0, 0, 0, 0, 2, 3, 3, 3, 3, 2, 7, 1, 1, 1, 0],
  [0, 1, 1, 1, 9, 2, 3, 6, 9, 3, 2, 0, 0, 0, 0, 0, 0, 2, 3, 6, 9, 3, 2, 6, 1, 1, 1, 0],
  [5, 3, 3, 3, 2, 2, 3, 2, 2, 3, 7, 1, 1, 1, 1, 1, 1, 8, 3, 2, 2, 3, 2, 2, 3, 3, 3, 5],
  [0, 1, 9, 3, 7, 8, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 7, 8, 3, 6, 1, 0],
  [0, 0, 2, 3, 3, 3, 3, 2, 7, 1, 1, 9, 3, 6, 9, 3, 6, 1, 1, 8, 2, 3, 3, 3, 3, 2, 0, 0],
  [0, 0, 2, 3, 6, 9, 3, 7, 1, 1, 1, 8, 3, 2, 2, 3, 7, 1, 1, 1, 8, 3, 6, 9, 3, 2, 0, 0],
  [0, 0, 2, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 2, 0, 0],
  [0, 0, 2, 3, 2, 7, 1, 1, 9, 3, 6, 9, 3, 2, 2, 3, 6, 9, 3, 6, 1, 1, 8, 2, 3, 2, 0, 0],
  [6, 1, 8, 3, 7, 1, 1, 1, 8, 3, 2, 2, 3, 7, 8, 3, 2, 2, 3, 7, 1, 1, 1, 8, 3, 7, 1, 9],
  [2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2],
  [2, 3, 6, 1, 1, 9, 3, 6, 9, 3, 2, 7, 1, 1, 1, 1, 8, 2, 3, 6, 9, 3, 6, 1, 1, 9, 3, 2],
  [2, 3, 2, 6, 1, 8, 3, 2, 2, 3, 7, 1, 1, 1, 1, 1, 1, 8, 3, 2, 2, 3, 7, 1, 9, 2, 3, 2],
  [2, 4, 2, 2, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 2, 2, 4, 2],
  [2, 3, 2, 2, 3, 6, 1, 8, 7, 1, 1, 9, 3, 6, 9, 3, 6, 1, 1, 8, 7, 1, 9, 3, 2, 2, 3, 2],
  [2, 3, 7, 8, 3, 7, 1, 1, 1, 1, 1, 8, 3, 2, 2, 3, 7, 1, 1, 1, 1, 1, 8, 3, 7, 8, 3, 2],
  [2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2],
  [7, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8, 7, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8],
];

const LEVEL_4_MAP = [
  [6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 9],
  [2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2],
  [2, 3, 6, 1, 1, 9, 3, 6, 1, 1, 1, 9, 3, 6, 9, 3, 6, 1, 1, 1, 9, 3, 6, 1, 1, 9, 3, 2],
  [2, 3, 7, 1, 1, 8, 3, 7, 1, 1, 9, 2, 3, 2, 2, 3, 2, 6, 1, 1, 8, 3, 7, 1, 1, 8, 3, 2],
  [2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 2, 2, 3, 2, 2, 3, 2, 2, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2],
  [7, 1, 9, 3, 6, 1, 1, 1, 9, 3, 2, 2, 3, 2, 2, 3, 2, 2, 3, 6, 1, 1, 1, 9, 3, 6, 1, 8],
  [0, 0, 2, 3, 7, 1, 1, 9, 2, 3, 2, 2, 3, 2, 2, 3, 2, 2, 3, 2, 6, 1, 1, 8, 3, 2, 0, 0],
  [0, 0, 2, 3, 3, 3, 3, 2, 2, 3, 7, 8, 3, 7, 8, 3, 7, 8, 3, 2, 2, 3, 3, 3, 3, 2, 0, 0],
  [0, 0, 2, 3, 6, 9, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 6, 9, 3, 2, 0, 0],
  [0, 0, 2, 3, 2, 2, 3, 2, 2, 3, 6, 1, 1, 1, 1, 1, 1, 9, 3, 2, 2, 3, 2, 2, 3, 2, 0, 0],
  [6, 1, 8, 3, 2, 2, 3, 7, 8, 3, 7, 1, 1, 1, 1, 1, 1, 8, 3, 7, 8, 3, 2, 2, 3, 7, 1, 9],
  [2, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 2],
  [2, 3, 6, 1, 8, 7, 1, 1, 9, 3, 6, 1, 1,99,99, 1, 1, 9, 3, 6, 1, 1, 8, 7, 1, 9, 3, 2],
  [2, 3, 7, 1, 1, 1, 1, 1, 8, 3, 2, 0, 0, 0, 0, 0, 0, 2, 3, 7, 1, 1, 1, 1, 1, 8, 3, 2],
  [2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 0, 0, 0, 0, 0, 0, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2],
  [2, 3, 6, 9, 3, 6, 1, 1, 9, 3, 2, 0, 0, 0, 0, 0, 0, 2, 3, 6, 1, 1, 9, 3, 6, 9, 3, 2],
  [2, 3, 2, 2, 3, 7, 1, 9, 2, 3, 7, 1, 1, 1, 1, 1, 1, 8, 3, 2, 6, 1, 8, 3, 2, 2, 3, 2],
  [2, 3, 2, 2, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 2, 2, 3, 2],
  [2, 3, 2, 7, 1, 9, 3, 2, 2, 3, 6, 9, 3, 6, 9, 3, 6, 9, 3, 2, 2, 3, 6, 1, 8, 2, 3, 2],
  [2, 3, 2, 6, 1, 8, 3, 7, 8, 3, 2, 2, 3, 2, 2, 3, 2, 2, 3, 7, 8, 3, 7, 1, 9, 2, 3, 2],
  [2, 3, 2, 2, 3, 3, 3, 3, 3, 4, 2, 2, 3, 2, 2, 3, 2, 2, 4, 3, 3, 3, 3, 3, 2, 2, 3, 2],
  [2, 3, 2, 2, 3, 6, 1, 1, 1, 1, 8, 2, 3, 2, 2, 3, 2, 7, 1, 1, 1, 1, 9, 3, 2, 2, 3, 2],
  [2, 3, 7, 8, 3, 7, 1, 1, 1, 1, 1, 8, 3, 7, 8, 3, 7, 1, 1, 1, 1, 1, 8, 3, 7, 8, 3, 2],
  [2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2],
  [2, 3, 6, 9, 3, 6, 1, 1, 9, 3, 6, 1, 1, 1, 1, 1, 1, 9, 3, 6, 1, 1, 9, 3, 6, 9, 3, 2],
  [2, 3, 2, 2, 3, 7, 1, 9, 2, 3, 7, 1, 1, 9, 6, 1, 1, 8, 3, 2, 6, 1, 8, 3, 2, 2, 3, 2],
  [2, 3, 2, 2, 3, 3, 3, 2, 2, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 2, 2, 3, 3, 3, 2, 2, 3, 2],
  [2, 3, 2, 7, 1, 9, 3, 2, 2, 3, 6, 9, 3, 2, 2, 3, 6, 9, 3, 2, 2, 3, 6, 1, 8, 2, 3, 2],
  [2, 3, 7, 1, 1, 8, 3, 7, 8, 3, 2, 2, 3, 7, 8, 3, 2, 2, 3, 7, 8, 3, 7, 1, 1, 8, 3, 2],
  [2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2],
  [7, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8, 7, 1, 1, 1, 1, 8, 7, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8],
];

const LEVEL_5_MAP = [
  [6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 9, 6, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 9],
  [2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2],
  [2, 3, 6, 1, 1, 9, 3, 6, 1, 1, 1, 9, 3, 2, 2, 3, 6, 1, 1, 1, 9, 3, 6, 1, 1, 9, 3, 2],
  [2, 3, 7, 1, 1, 8, 3, 7, 1, 1, 9, 2, 3, 2, 2, 3, 2, 6, 1, 1, 8, 3, 7, 1, 1, 8, 3, 2],
  [2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 7, 8, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2],
  [7, 1, 1, 9, 3, 6, 1, 1, 9, 3, 2, 2, 3, 3, 3, 3, 2, 2, 3, 6, 1, 1, 9, 3, 6, 1, 1, 8],
  [6, 1, 1, 8, 3, 7, 1, 9, 2, 3, 2, 2, 3, 6, 9, 3, 2, 2, 3, 2, 6, 1, 8, 3, 7, 1, 1, 9],
  [2, 3, 3, 3, 3, 3, 4, 2, 2, 3, 7, 8, 3, 2, 2, 3, 7, 8, 3, 2, 2, 4, 3, 3, 3, 3, 3, 2],
  [2, 3, 6, 1, 1, 9, 3, 2, 2, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 2, 2, 3, 6, 1, 1, 9, 3, 2],
  [2, 3, 7, 1, 9, 2, 3, 2, 2, 3, 6, 1, 1, 8, 7, 1, 1, 9, 3, 2, 2, 3, 2, 6, 1, 8, 3, 2],
  [2, 3, 3, 3, 2, 2, 3, 7, 8, 3, 7, 1, 1, 1, 1, 1, 1, 8, 3, 7, 8, 3, 2, 2, 3, 3, 3, 2],
  [2, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 2],
  [7, 1, 9, 3, 2, 2, 3, 6, 9, 3, 6, 1, 1,99,99, 1, 1, 9, 3, 6, 9, 3, 2, 2, 3, 6, 1, 8],
  [0, 1, 8, 3, 7, 8, 3, 2, 2, 3, 2, 0, 0, 0, 0, 0, 0, 2, 3, 2, 2, 3, 7, 8, 3, 7, 1, 0],
  [5, 3, 3, 3, 3, 3, 3, 2, 2, 3, 2, 0, 0, 0, 0, 0, 0, 2, 3, 2, 2, 3, 3, 3, 3, 3, 3, 5],
  [0, 1, 9, 3, 6, 1, 1, 8, 2, 3, 2, 0, 0, 0, 0, 0, 0, 2, 3, 2, 7, 1, 1, 9, 3, 6, 1, 0],
  [6, 1, 8, 3, 7, 1, 1, 1, 8, 3, 7, 1, 1, 1, 1, 1, 1, 8, 3, 7, 1, 1, 1, 8, 3, 7, 1, 9],
  [2, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 4, 3, 3, 3, 3, 3, 3, 3, 3, 2],
  [2, 3, 6, 1, 1, 9, 3, 6, 9, 3, 6, 1, 1, 1, 1, 1, 1, 9, 3, 6, 9, 3, 6, 1, 1, 9, 3, 2],
  [2, 3, 2, 6, 1, 8, 3, 2, 2, 3, 7, 1, 1, 9, 6, 1, 1, 8, 3, 2, 2, 3, 7, 1, 9, 2, 3, 2],
  [2, 3, 2, 2, 3, 3, 3, 2, 2, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 2, 2, 3, 3, 3, 2, 2, 3, 2],
  [2, 3, 2, 2, 3, 6, 1, 8, 7, 1, 1, 9, 3, 2, 2, 3, 6, 1, 1, 8, 7, 1, 9, 3, 2, 2, 3, 2],
  [2, 3, 7, 8, 3, 7, 1, 1, 1, 1, 1, 8, 3, 7, 8, 3, 7, 1, 1, 1, 1, 1, 8, 3, 7, 8, 3, 2],
  [2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2],
  [7, 1, 1, 1, 1, 1, 9, 3, 6, 9, 3, 6, 1, 1, 1, 1, 9, 3, 6, 9, 3, 6, 1, 1, 1, 1, 1, 8],
  [6, 1, 1, 1, 1, 1, 8, 3, 2, 2, 3, 7, 1, 9, 6, 1, 8, 3, 2, 2, 3, 7, 1, 1, 1, 1, 1, 9],
  [2, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 2, 2, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 2],
  [2, 3, 6, 1, 1, 1, 1, 1, 8, 7, 1, 9, 3, 2, 2, 3, 6, 1, 8, 7, 1, 1, 1, 1, 1, 9, 3, 2],
  [2, 3, 7, 1, 1, 1, 1, 1, 1, 1, 1, 8, 3, 2, 2, 3, 7, 1, 1, 1, 1, 1, 1, 1, 1, 8, 3, 2],
  [2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 2],
  [7, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8, 7, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 8],
];
  
let mazeData = [];
let walldata = [];

class Maze {
  constructor() {
    this.lineWidth = blockWidth / 10 + blockWidth / 20;
    this.color = "rgb(190, 50, 50)";
    this.colorLVL1 = "rgb(190, 50, 50)";
    this.colorLVL2 = "rgb(49, 92, 233)";
    this.colorLVL3 = "rgb(142, 67, 185)";
    this.colorLVL4 = "rgb(41, 155, 107)";
    this.colorLVL5 = "rgb(160, 23, 91)";
  }

  draw() {
    canvasCleaner("maze");
    for (let i = 0; i < mazeMap.length; i++) {
      const mazeMapRow = mazeMap[i];
      for (let j = 0; j < mazeMapRow.length; j++) {
        if (mazeMapRow[j] === 1) {
          this.make(1, i, j);
        } else if (mazeMapRow[j] === 2) {
          this.make(2, i, j);
        } else if (mazeMapRow[j] === 6) {
          this.make(6, i, j);
        } else if (mazeMapRow[j] === 7) {
          this.make(7, i, j);
        } else if (mazeMapRow[j] === 8) {
          this.make(8, i, j);
        } else if (mazeMapRow[j] === 9) {
          this.make(9, i, j);
        }
      }
    }
  }

  make(type, i, j) {
    ctxMaze.strokeStyle = this.color;
    ctxMaze.lineWidth = this.lineWidth;

    if (type === 1) {
      ctxMaze.beginPath();
      ctxMaze.moveTo(blockWidth * j, blockHeight * i + blockHeight / 2);
      ctxMaze.lineTo(
        blockWidth * j + blockWidth,
        blockHeight * i + blockHeight / 2
      );
      ctxMaze.stroke();
      ctxMaze.closePath();
    } else if (type === 2) {
      ctxMaze.beginPath();
      ctxMaze.moveTo(
        blockWidth * j + blockWidth / 2,
        blockHeight * i + blockHeight
      );
      ctxMaze.lineTo(blockWidth * j + blockWidth / 2, blockHeight * i);
      ctxMaze.stroke();
      ctxMaze.closePath();
    } else if (type === 6) {
      ctxMaze.beginPath();
      ctxMaze.moveTo(
        blockWidth * j + blockWidth / 2,
        blockHeight * i + blockHeight
      );
      ctxMaze.quadraticCurveTo(
        blockWidth * j + blockWidth / 2,
        blockHeight * i + blockHeight / 2,
        blockWidth * j + blockWidth,
        blockHeight * i + blockHeight / 2
      );
      ctxMaze.stroke();
      ctxMaze.closePath();
    } else if (type === 7) {
      ctxMaze.beginPath();
      ctxMaze.moveTo(blockWidth * j + blockWidth / 2, blockHeight * i);
      ctxMaze.quadraticCurveTo(
        blockWidth * j + blockWidth / 2,
        blockHeight * i + blockHeight / 2,
        blockWidth * j + blockWidth,
        blockHeight * i + blockHeight / 2
      );
      ctxMaze.stroke();
      ctxMaze.closePath();
    } else if (type === 8) {
      ctxMaze.beginPath();
      ctxMaze.moveTo(blockWidth * j + blockWidth / 2, blockHeight * i);
      ctxMaze.quadraticCurveTo(
        blockWidth * j + blockWidth / 2,
        blockHeight * i + blockHeight / 2,
        blockWidth * j,
        blockHeight * i + blockHeight / 2
      );
      ctxMaze.stroke();
      ctxMaze.closePath();
    } else if (type === 9) {
      ctxMaze.beginPath();
      ctxMaze.moveTo(
        blockWidth * j + blockWidth / 2,
        blockHeight * i + blockHeight
      );
      ctxMaze.quadraticCurveTo(
        blockWidth * j + blockWidth / 2,
        blockHeight * i + blockHeight / 2,
        blockWidth * j,
        blockHeight * i + blockHeight / 2
      );
      ctxMaze.stroke();
      ctxMaze.closePath();
    }
  }

  createMazeData() {

    for (let i = 0; i < mazeMap.length; i++) {
      const mazeMapRow = mazeMap[i];
  
      create(undefined, i, 0);
  
      for (let j = 0; j < mazeMapRow.length; j++) {
        if (mazeMapRow[j] === 1) {
          create(1, i ,j);
          walldata.push({x: blockWidth * j + blockWidth / 2, y: blockHeight * i + blockHeight / 2, type: "wall"});
        } else if (mazeMapRow[j] === 2) {
          create(2, i, j);
          walldata.push({x: blockWidth * j + blockWidth / 2, y: blockHeight * i + blockHeight / 2, type: "wall"});
        } else if (mazeMapRow[j] === 6) {
          create(6, i, j);
          walldata.push({x: blockWidth * j + blockWidth / 2, y: blockHeight * i + blockHeight / 2, type: "wall"});
        } else if (mazeMapRow[j] === 7) {
          create(7, i, j);
          walldata.push({x: blockWidth * j + blockWidth / 2, y: blockHeight * i + blockHeight / 2, type: "wall"});
        } else if (mazeMapRow[j] === 8) {
          create(8, i, j);
          walldata.push({x: blockWidth * j + blockWidth / 2, y: blockHeight * i + blockHeight / 2, type: "wall"});
        } else if (mazeMapRow[j] === 9) {
          create(9, i, j);
          walldata.push({x: blockWidth * j + blockWidth / 2, y: blockHeight * i + blockHeight / 2, type: "wall"});
        } else if (mazeMapRow[j] === 3) {
          create(3, i, j);
          fooddata.push({x: blockWidth * j + blockWidth / 2, y: blockHeight * i + blockHeight / 2, eaten: false});
        } else if (mazeMapRow[j] === 5) {
          create(5, i, j);
          walldata.push({x: blockWidth * j + blockWidth / 2, y: blockHeight * i + blockHeight / 2, type: "teleport"});
        } else if (mazeMapRow[j] === 4) {
          create(4, i, j);
          pilldata.push({x: blockWidth * j + blockWidth / 2, y: blockHeight * i + blockHeight / 2, eaten: false});
        } else if (mazeMapRow[j] === 0) {
          create(0, i, j);
        } else if (mazeMapRow[j] === 99) {
          walldata.push({x: blockWidth * j + blockWidth / 2, y: blockHeight * i + blockHeight / 2, type: "lair"});
          create(99, i, j);
        }
      }
    }
  
    function create(blockType, i, j) {
      const x = blockWidth * j + blockWidth / 2; 
      const y = blockHeight * i + blockHeight / 2;
    
      if (blockType === undefined) {
        mazeData[i] = [];
      } else if (blockType === 0) {
        mazeData[i][j] = {x: x, y: y, type: "none"};
      } else if (blockType === 1 || blockType === 2) {
        mazeData[i][j] = {x: x, y: y, type: "wall"};
      } else if (blockType === 3) {
        mazeData[i][j] = {x: x, y: y, type: "food", eaten: false};
      } else if (blockType === 6 || blockType === 7 || blockType === 8 || blockType === 9) {
        mazeData[i][j] = {x: x, y: y, type: "corner"};
      } else if (blockType === 4) {
        mazeData[i][j] = {x: x, y: y, type: "pill", eaten: false};
      } else if (blockType === 5) {
        mazeData[i][j] = {x: x, y: y, type: "teleport"};
      } else if (blockType === 99) {
        mazeData[i][j] = {x: x, y: y, type: "lair"};
      }
    }
  }
}

const maze = new Maze();

